@model IEnumerable<Appellio.Models.IWord>

@{
    ViewData["Title"] = "Words";
}

<style>
    .album-title {
        margin-bottom: 30px;
    }

    .dropleft .dropdown-toggle::before {
        display: none;
    }

    .btn.menu.dropdown-toggle {
        background-color: transparent;
        padding: 0rem 0rem;
    }

    .modal-footer {
        justify-content: center;
    }

    .modal-body-item {
        display: flex;
    }

    .material-icons {
        margin-right: 1rem;
    }

    .btn-circle {
        width: 45px;
        height: 45px;
        line-height: 45px;
        text-align: center;
        padding: 0;
        border-radius: 50%;
    }

        .btn-circle i {
            position: relative;
            top: 4px;
            margin-right: 0rem;
        }

    .btn-circle-sm {
        width: 35px;
        height: 35px;
        line-height: 35px;
        font-size: 0.9rem;
    }
</style>

<h3 class="album-title">@ViewData["AlbumTitle"]</h3>

@*<button id="start" class="btn btn-primary">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
            <path d="M0 0h24v24H0z" fill="none" />
            <path d="M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" fill="white" />
        </svg>
        再生
    </button>
    <button id="pause" class="btn btn-secondary">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
            <path d="M0 0h24v24H0z" fill="none" />
            <path d="M9 16h2V8H9v8zm3-14C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm1-4h2V8h-2v8z" fill="white" />
        </svg>
        停止
    </button>*@
<div class="custom-control custom-checkbox">
    <input type="checkbox" class="custom-control-input" id="isAutoplay">
    <label class="custom-control-label" for="isAutoplay">連続再生</label>
</div>
<table id="wordsTable" class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Spelling)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Meaning)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TextMeaning)
            </th>
            <th>
                <div class="btn-group dropleft">
                    <button type="button" class="btn menu dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                            <path d="M0 0h24v24H0z" fill="none" />
                            <path d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" />
                        </svg>
                    </button>
                    <div class="dropdown-menu">
                        <form asp-action="Create" asp-controller="Words">
                            <input type="hidden" name="albumId" value="@TempData["AlbumId"]" />
                            <input type="submit" value="単語データの作成" class="dropdown-item" />
                        </form>
                    </div>
                </div>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr data-id="@item.Id">
            <td class="table-cell">
                @Html.DisplayFor(modelItem => item.Spelling)
            </td>
            <td class="table-cell">
                @Html.DisplayFor(modelItem => item.Meaning)
            </td>
            <td class="table-cell .cell-text">
                @Html.DisplayFor(modelItem => item.Text)
            </td>
            <td class="table-cell .cell-text">
                @Html.DisplayFor(modelItem => item.TextMeaning)
            </td>
            <td>
                @Html.ActionLink("詳細", "Details", "Words", new { id = item.Id })
            </td>
        </tr>
        }
    </tbody>
</table>

<div>
    <a asp-action="Index" asp-controller="Albums">アルバムリストに戻る</a>
</div>

<script src="~/js/app.js"></script>

<script>
    var words = @Html.Raw(Json.Serialize(Model));
</script>

<!-- Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <input id="id" type="hidden" value="" />
                <i class="material-icons">
                    spellcheck
                </i>
                <h5 class="modal-title" id="spelling">
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="modal-body-item">
                    <div>
                        <i class="material-icons">language</i>
                    </div>
                    <div id="meaning"></div>
                </div>
                <div class="modal-body-item">
                    <div><i class="material-icons">notes</i></div>
                    <div id="text"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="prevButton" type="button"
                        class="btn btn-light btn-circle btn-circle-sm m-1"
                        onclick="prev()">
                    <i class="material-icons">chevron_left</i>
                </button>
                <button id="playButton" type="button"
                        class="btn btn-light btn-circle btn-circle-sm m-1"
                        onclick="play()">
                    <i class="material-icons">play_arrow</i>
                </button>
                <button id="stopButton" type="button"
                        class="btn btn-light btn-circle btn-circle-sm m-1"
                        onclick="stop()">
                    <i class="material-icons">pause</i>
                </button>
                <button id="nextButton" type="button"
                        class="btn btn-light btn-circle btn-circle-sm m-1" 
                        onclick="next()">
                    <i class="material-icons">chevron_right</i>
                </button>
            </div>
        </div>
    </div>
</div>