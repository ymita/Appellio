@model IEnumerable<Appellio.Models.IWord>

    @{
    ViewData["Title"] = "Words";
    }
    <style>
        .w-10 {
            width: 10%;
        }

        .w-20 {
            width: 20%;
        }

        .btn-size {
            width: 50px;
        }

        .edit-label {
            padding: 0.5vw;
        }
    </style>
    <h1>@ViewData["AlbumTitle"]</h1>

    <form asp-action="Create" asp-controller="Words" method="post">
        <input name="albumId" hidden value="@Context.Request.Path.Value.Split("/").Last()" />
        <input type="submit" value="Create New" class="btn btn-primary" />
    </form>

    <table class="table">
        <thead>
            <tr>
                <th class="w-20">
                    @Html.DisplayNameFor(model => model.Spelling)
                </th>
                <th class="w-20">
                    @Html.DisplayNameFor(model => model.Meaning)
                </th>
                <th class="w-50">
                    @Html.DisplayNameFor(model => model.Text)
                </th>
                <th class="w-10">
                    <button id="editButton" class="btn btn-info" onclick="toggleEdit(this)">Edit</button>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Spelling)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Meaning)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Text)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", "Words" , new { id=item.Id }, new { @class = "edit-label", @style = "display:none" })
                </td>
            </tr>
}
        </tbody>
    </table>
    <div>
        <a href="/Albums">Back to List</a>
    </div>

    <script>
        function toggleEdit(button) {
            console.log(button);

            const editLabels = document.querySelectorAll(".edit-label")

            const isInEdit = button.classList.contains("btn-info");
            if (isInEdit) {
                button.classList.remove("btn-info");
                button.classList.add("btn-secondary");

                editLabels.forEach((label) => {
                    label.style.display = "";
                });

                button.textContent = "End";
            }
            else {
                button.classList.remove("btn-secondary");
                button.classList.add("btn-info");

                editLabels.forEach((label) => {
                    label.style.display = "none";
                });
                button.textContent = "Edit";
            }
        }
    </script>